Scenario 1:

CREATE OR REPLACE FUNCTION CalculateAge (p_dob IN DATE) RETURN NUMBER IS
    v_age NUMBER;
BEGIN
    SELECT TRUNC((SYSDATE - p_dob) / 365.25) INTO v_age FROM DUAL;
    RETURN v_age;
END;
/

Scenario 2:

CREATE OR REPLACE FUNCTION CalculateMonthlyInstallment (p_loanAmount IN NUMBER, p_interestRate IN NUMBER, p_durationYears IN NUMBER) RETURN NUMBER IS
    v_monthlyInstallment NUMBER;
BEGIN
    v_monthlyInstallment := p_loanAmount * (p_interestRate / 1200) / (1 - POWER(1 + (p_interestRate / 1200), -p_durationYears * 12));
    RETURN v_monthlyInstallment;
END;
/

Scenario 3:

CREATE OR REPLACE FUNCTION HasSufficientBalance (p_accountID IN NUMBER, p_amount IN NUMBER) RETURN BOOLEAN IS
    v_balance NUMBER;
BEGIN
    SELECT Balance INTO v_balance FROM Accounts WHERE AccountID = p_accountID;
    
    IF v_balance >= p_amount THEN
        RETURN TRUE;
    ELSE
        RETURN FALSE;
    END IF;
END;
/
